import pandas as pd
import matplotlib.pyplot as pltd
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
df.head(10)

import pandas as pd
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2004-06-01')
end_date=pd.to_datetime('2004-09-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
new_df

df1=df.loc[new_df]
df1

df2=df1.set_index('Date')
df2

import pandas as plt
import matplotlib.pyplot as plt
plt.figure(figsize=(5,5))
plt.suptitle('Stock Price of Alphabet Inc.,\n01-06-2004 to 30-09-2004', \
             fontsize=18,color='black')
plt.xlabel("Date",fontsize=16,color='black')
plt.ylabel("$ Price",fontsize=16,color='black')
df2['Close'].plot(color='green');
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
df['Date']=pd.to_datetime(df['Date'])
plt.figure(figsize=(10,10))
df.plot(x='Date',y=['Open','Close']);
plt.suptitle('opening/closing stack price of alphabet Inc.,\n01-06-2004 to 30-09-2004', \
             fontsize=18,color='black')
plt.xlabel("Date",fontsize=18,color='black')
plt.ylabel("$ price",fontsize=18,color='black')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2004-04-01')
end_date=pd.to_datetime('2004-04-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
df1=df.loc[new_df]
df2=df.set_index('Date')
plt.figure(figsize=(6,6))
plt.suptitle('Trading Volume of alphabet Inc.stock,\n01-06-2004 to 30-09-2004', \
             fontsize=18,color='black')
plt.xlabel("Date",fontsize=18,color='black')
plt.ylabel("Trading Volume",fontsize=18,color='black')
df2['Volume'].plot(kind='bar');
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2020-04-01')
end_date=pd.to_datetime('2020-04-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
df1=df.loc[new_df]
df2=df1[['Date','Open','Close']]
df3=df2.set_index('Date')
plt.figure(figsize=(20,20))
df3.plot.bar();
plt.suptitle('Opening/Closing stock prices Alphabet Inc.,\n01-06-2020 to 30-09-2020', 
             fontsize=18,color='black')
plt.show()

In [6]:


import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2020-04-01')
end_date=pd.to_datetime('2020-04-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
df1=df.loc[new_df]
df2=df1[['Date','Open','Close']]
df3=df2.set_index('Date')
plt.figure(figsize=(20,20))
df3.plot.bar(stacked=True);
plt.suptitle('Opening/Closing stock prices alphabet Inc.,\n01-06-2020 to 30-09-2020', 
             fontsize=18,color='black')
plt.show()
â€‹

df3.plot.barh(stacked=True);

import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2020-4-1')
end_date=pd.to_datetime('2020-9-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
df1=df.loc[new_df]
df2=df1.set_index('Date')
plt.figure(figsize=[15,10])
df2.plot.scatter('Close', 'Volume', s=20);
plt.grid(True)
plt.title('Trading Volume of alphabet Inc.stock,\n01-06-2020 to 30-09-2020', \
             fontsize=18,color='black')
plt.xlabel("Stock Price",fontsize=12,color='black')
plt.ylabel("Trading volume",fontsize=12,color='black')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv("C:/Users/Admin/Downloads/archive (7)/Alphabet Stock.csv")
start_date=pd.to_datetime('2020-4-1')
end_date=pd.to_datetime('2020-9-30')
df['Date']=pd.to_datetime(df['Date'])
new_df=(df['Date']>=start_date)&(df['Date']<=end_date)
df1=df.loc[new_df]
df2=df1[['Date','Adj Close']]
df3=df2.set_index('Date')
print(df3)
daily_changes=df3.pct_change(periods=1)
print(daily_changes)
daily_changes['Adj Close'].plot(figsize=(10,7),legend=True,linestyle='--',marker='o')
plt.suptitle('Daily % return of alphabet Inc.stock,\n01-06-2020 to 30-09-2020', \
             fontsize=18,color='black')
plt.grid(True)
plt.show()

import numpy as np
from matplotlib import pyplot as plt
cars = ['AUDI', 'BMW', 'FORD',
        'TESLA', 'JAGUAR', 'MERCEDES']
data = [23, 17, 35, 29, 12, 41]
fig = plt.figure(figsize =(10, 7))
plt.pie(data, labels = cars)
plt.show()

cars = ['AUDI', 'BMW', 'FORD',
        'TESLA', 'JAGUAR', 'MERCEDES']
data = [23, 17, 35, 29, 12, 41]
explode = (0.1, 0.0, 0.2, 0.3, 0.0, 0.0)
colors = ( "orange", "cyan", "brown",
          "grey", "indigo", "beige")
wp = { 'linewidth' : 1, 'edgecolor' : "green" }
def func(pct, allvalues):
    absolute = int(pct / 100.*np.sum(allvalues))
    return "{:.1f}%\n({:d} g)".format(pct, absolute)
fig, ax = plt.subplots(figsize =(10, 7))
wedges, texts, autotexts = ax.pie(data,
                                  autopct = lambda pct: func(pct, data),
                                  explode = explode,
                                  labels = cars,
                                  shadow = True,
                                  colors = colors,
                                  startangle = 90,
                                  wedgeprops = wp,
                                  textprops = dict(color ="magenta"))
ax.legend(wedges, cars,
          title ="Cars",
          loc ="center left",
          bbox_to_anchor =(1, 0, 0.5, 1))
plt.setp(autotexts, size = 8, weight ="bold")
ax.set_title("Customizing pie chart")
plt.show()import numpy as np
import matplotlib.pyplot as plt

import numpy as np
from matplotlib import pyplot as plt
size = 6
cars = ['AUDI', 'BMW', 'FORD',
        'TESLA', 'JAGUAR', 'MERCEDES']
data = np.array([[23, 16], [17, 23],
                 [35, 11], [29, 33],
                 [12, 27], [41, 42]])
norm = data / np.sum(data)*2 * np.pi
left = np.cumsum(np.append(0,
                           norm.flatten()[:-1])).reshape(data.shape)
cmap = plt.get_cmap("tab20c")
outer_colors = cmap(np.arange(6)*4)
inner_colors = cmap(np.array([1, 2, 5, 6, 9,
                              10, 12, 13, 15,
                              17, 18, 20 ]))
fig, ax = plt.subplots(figsize =(10, 7),
                       subplot_kw = dict(polar = True))
ax.bar(x = left[:, 0],
       width = norm.sum(axis = 1),
       bottom = 1-size,
       height = size,
       color = outer_colors,
       edgecolor ='w',
       linewidth = 1,
       align ="edge")
ax.bar(x = left.flatten(),
       width = norm.flatten(),
       bottom = 1-2 * size,
       height = size,
       color = inner_colors,
       edgecolor ='w',
       linewidth = 1,
       align ="edge")
ax.set(title ="Nested pie chart")
ax.set_axis_off()
plt.show()